
@model CybSoftServices.Models.ServiceModel

@{
    ViewBag.Title = "EditService";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@*<h1 class="alert-info">EDIT Services</h1>*@
<HI></HI>
<HI></HI>
<div class="card-body" id="bar-parent">
    <form action="EditService" method="Post" id="form_sample_1" class="form-horizontal" @*novalidate="novalidate"*@>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-body">
            <input type="hidden" name="ServId" value="@Model.ServId" />
            <div class="form-group row">
                <label class="control-label col-md-3">
                    Item Name
                </label>

                <div class="col-md-12">
                    @*@Html.TextBoxFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "enter new item" } })*@
                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @placeholder = "enter new item" })

                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                    @*@Html.TextBox("CustomarName", null, new { @class = "form-control", @placeholder = "Search With Customar Name" })*@
                    @*@Html.TextBoxFor(m => m.Listing.Location.AddressLine1, new { @placeholder = "Address Line 1 - Required" })*@
                </div>
            </div>

            <div class="form-group row">
                <label class="control-label col-md-3">
                    Description
                    @*<span class="required" aria-required="true"> * </span>*@
                </label>
                <div class="col-md-12">
                    @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <label class="control-label col-md-3">
                    Expire Date
                    @*<span class="required" aria-required="true"> * </span>*@
                </label>
                <div class="col-md-12">
                    @*<input type="date" name="ExpiredDate" class="form-control" value="mm/dd/yyyy" />*@
                    @Html.TextBoxFor(model => model.ExpiredDate, new { @class = "form-control", @placeholder = "enter new date
                   " })
                    @*@Html.@String.Format("{0:d}", model.ExpiredDate)*@
                    @Html.ValidationMessageFor(m => m.ExpiredDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                <label class="control-label col-md-3">
                    Renewer Type
                    @*<span class="required" aria-required="true"> * </span>*@
                </label>
                <div class="col-md-12">
                    <div class="col-md-12">
                        @*<input type="date" name="ExpiredDate" class="form-control" value="mm/dd/yyyy" />*@
                        @Html.TextBoxFor(model => model.RenewerType, new { @class = "form-control", @placeholder = "enter new item" })
                 
                        @Html.ValidationMessageFor(m => m.RenewerType, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
 
            <div class="form-group row">
                <label class="control-label col-md-3">
                    Email
                    @*<span class="required" aria-required="true"> * </span>*@
                </label>
                <div class="col-md-12">
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @placeholder = "enter notification email" })
                    @*@Html.TextBoxFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <label class="control-label col-md-3">
                    CountDown date
                </label>

                <div class="col-md-12">
                    @*<input type="number" name="Duration" class="form-control" placeholder="enter expiring date (e.g 3)"  />*@
                    @Html.TextBoxFor(model => model.CountDown, new { @class = "form-control", @placeholder = "enter new item" })
                    @Html.ValidationMessageFor(m => m.CountDown, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="form-group row">
                <label class="control-label col-md-3">
                    Alert Expired
                    @*<span class="required" aria-required="true"> * </span>*@
                </label>
                <div class="col-md-12">
                    @Html.TextBoxFor(model => model.AlertExpired, new { @class = "form-control", @placeholder = "enter new item" })
                    @Html.ValidationMessageFor(m => m.AlertExpired, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-actions">
                <div class="row">
                    <div class="offset-md-3 col-md-6 pull-right">
                        <button type="submit" class="btn btn-info" id="submitData">Save</button>
                        @*<button type="button" class="btn btn-danger">Cancel</button>*@

                    </div>
                    <div class="col-md-1">
                        <a href="@Url.Action("Index","Service", new { area = ""})" class="btn btn-chatpane">Back To List(s)</a>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}



@*@model CybSoftServices.Models.ServiceModel

    @{
        ViewBag.Title = "EditService";
    }

    <h2>EditService</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>ServiceModel</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.ServId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ServId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ServId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ExpiredDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ExpiredDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ExpiredDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RenewerType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RenewerType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RenewerType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CountDown, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CountDown, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CountDown, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AlertExpired, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.AlertExpired)
                        @Html.ValidationMessageFor(model => model.AlertExpired, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreatedDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ModifiedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ModifiedBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ModifiedBy, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ModifiedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ModifiedDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ModifiedDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
